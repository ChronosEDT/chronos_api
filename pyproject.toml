[tool.poetry]
name = "chronos_api"
version = "0.0.1"
description = "API acting as a proxy between the services and the CELCAT application of the IUT of VÃ©lizy"
authors = ["Yohann MARTIN <contact@codexus.fr>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "app" }]


[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.103.2"
uvicorn = { extras = ["standard"], version = "^0.23.2" }
redis = {extras = ["hiredis"], version = "^5.0.1"}
gunicorn = "^21.2.0"
colorlog = "^6.7.0"
pydantic-settings = "^2.0.3"
httpx = "^0.25.0"


[tool.poetry.group.dev.dependencies]
black = "^23.10.0"
mypy = "^1.6.1"
ruff = "^0.1.0"
types-redis = "^4.6.0.7"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
plugins = ["pydantic.mypy"]
strict = true


[tool.ruff]
target-version = "py310"
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]


[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]


[tool.ruff.isort]
known-third-party = ["pydantic"]
