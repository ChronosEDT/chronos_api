[tool.poetry]
name = "chronos_api"
version = "0.0.1"
description = "API acting as a proxy between the services and the CELCAT application of the IUT of VÃ©lizy"
authors = ["Yohann MARTIN <contact@codexus.fr>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "app" }]


[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0.post1"}
redis = {extras = ["hiredis"], version = "^5.0.1"}
gunicorn = "^21.2.0"
colorlog = "^6.8.2"
pydantic-settings = "^2.1.0"
httpx = "^0.26.0"


[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
ruff = "^0.1.15"
types-redis = "^4.6.0.20240106"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
plugins = ["pydantic.mypy"]
strict = true


[tool.ruff]
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by ruff
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex,
    "W191",  # indentation contains tabs
    "B904"   # Opinionated warning on exception chaining
]

[tool.ruff.format]
line-ending = "lf"
quote-style = "double"
indent-style = "space"

[tool.ruff.isort]
known-third-party = ["pydantic"]
